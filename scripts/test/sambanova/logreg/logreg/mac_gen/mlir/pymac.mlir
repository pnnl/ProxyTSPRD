#loc0 = loc(unknown)
#loc1 = loc(fused<[{ArcID = 0 : i64, BaseName = "logreg__lin_layer__weight", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1543:0), MacID = "logreg__lin_layer__weight"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc2 = loc(fused<[{ArcID = 1 : i64, BaseName = "image", Layer = 0 : i64, Location = loc("UnknownFileName":0:0), MacID = "image"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc3 = loc(fused<[{ArcID = 2 : i64, BaseName = "label", Layer = 0 : i64, Location = loc("UnknownFileName":0:0), MacID = "label"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc4 = loc(fused<[{ArcID = 3 : i64, BaseName = "logreg__criterion__crossentropyloss__outputs__0__grad", Layer = 0 : i64, Location = loc("UnknownFileName":0:0), MacID = "logreg__criterion__crossentropyloss__outputs__0__grad"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc5 = loc(fused<[{ArcID = 4 : i64, BaseName = "logreg__lin_layer__linear__outputs__0__grad", Layer = 0 : i64, Location = loc("UnknownFileName":0:0), MacID = "logreg__lin_layer__linear__outputs__0__grad"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc6 = loc(fused<[{ArcID = 5 : i64, BaseName = "logreg__lin_layer__weight__sgd0__momentum", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1543:0), MacID = "logreg__lin_layer__weight__sgd0__momentum"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc7 = loc(fused<[{ArcID = 6 : i64, BaseName = "logreg__lin_layer__linear", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__lin_layer__linear"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc8 = loc(fused<[{ArcID = 7 : i64, BaseName = "logreg__lin_layer__linear_t_output0", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__lin_layer__linear_t_output0"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc9 = loc(fused<[{ArcID = 8 : i64, BaseName = "logreg__criterion__crossentropyloss", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__criterion__crossentropyloss"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc10 = loc(fused<[{ArcID = 9 : i64, BaseName = "logreg__lin_layer__linear__outputs__0", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1716:0), MacID = "logreg__lin_layer__linear__outputs__0"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc11 = loc(fused<[{ArcID = 10 : i64, BaseName = "logreg__criterion__crossentropyloss_bwd_loss", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__criterion__crossentropyloss_bwd_loss"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc12 = loc(fused<[{ArcID = 11 : i64, BaseName = "logreg__criterion__crossentropyloss__outputs__0", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1716:0), MacID = "logreg__criterion__crossentropyloss__outputs__0"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc13 = loc(fused<[{ArcID = 12 : i64, BaseName = "logreg__lin_layer__linear_t_output0_bwd_addn0", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__lin_layer__linear_t_output0_bwd_addn0"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc14 = loc(fused<[{ArcID = 13 : i64, BaseName = "logreg__lin_layer__linear_t_output0_bwd", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__lin_layer__linear_t_output0_bwd"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc15 = loc(fused<[{ArcID = 14 : i64, BaseName = "logreg__lin_layer__linear_bwd_weight", Layer = 0 : i64, Location = loc("/usr/local/lib/python3.7/site-packages/torch/overrides.py":1355:0), MacID = "logreg__lin_layer__linear_bwd_weight"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc16 = loc(fused<[{ArcID = 15 : i64, BaseName = "logreg__lin_layer__weight__grad", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1716:0), MacID = "logreg__lin_layer__weight__grad__output"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc17 = loc(fused<[{ArcID = 16 : i64, BaseName = "logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt", Layer = 0 : i64, Location = loc("logreg__lin_layer__weight":0:0), MacID = "logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc18 = loc(fused<[{ArcID = 17 : i64, BaseName = "logreg__lin_layer__weight", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1716:0), MacID = "logreg__lin_layer__weight__output"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
#loc19 = loc(fused<[{ArcID = 18 : i64, BaseName = "logreg__lin_layer__weight__sgd0__momentum", Layer = 0 : i64, Location = loc("software/compiler/mac/src/pybind/py_air.cpp":1716:0), MacID = "logreg__lin_layer__weight__sgd0__momentum__output"}]>["MLIRWorkaround":32:0, "FakeLocation":64:0])
module @program attributes {arc.AIRMappingDecisionIsSpatial = false, arc.kAIRAddnOpt = true, arc.kAIRAdvancedLoadSplitOpt = true, arc.kAIRAnnotateHyperFunctionArguments = false, arc.kAIRBufferBeforeConcatAddn = false, arc.kAIRBufferNonRedundancy = "", arc.kAIRDPTilingOptimization = false, arc.kAIRDisableConcatStoreOpt = false, arc.kAIRDisableLoadTilerOptWithDimOrdering = false, arc.kAIRDisableOptimizeRereadBuffer = false, arc.kAIREnableRemoteRead = false, arc.kAIREnableSkipBufferExtensionOpt = false, arc.kAIREnableStoreTilerOptWithDimOrdering = false, arc.kAIRForceDRAMFirstThenP2P = false, arc.kAIRMappingDecisionGlobalNumBatches = 1 : i64, arc.kAIRMetaPipeWithOneIterationRemoval = false, arc.kAIRTransposeMatMulTransformation = false, arc.kAppName = "logreg_torch_samba", arc.kArchMajor = 1 : i64, arc.kArchMinor = 0 : i64, arc.kBoxLayoutSize = 2 : i64, arc.kBoxLayoutType = 0 : i64, arc.kConcisePrinting = false, arc.kDataParallelBf16StochasticRounding = false, arc.kDataParallelBf16StochasticRoundingHighStaticBatchSize = false, arc.kDataParallelBf16StochasticRoundingSeedName = "", arc.kDataParallelFactor = 1 : i64, arc.kDebugMode = false, arc.kEliminateBufferTimeout = 100 : i64, arc.kEnableAutoGrouping = true, arc.kExperimentalOptimization = true, arc.kExperimentalRAILCrossEntropy = true, arc.kExperimentalRAILCrossEntropyGrad = true, arc.kGenerateReference = false, arc.kGenerateTensorboard = false, arc.kHeuristicRuntimeLayouts = true, arc.kHeuristicSliceLayouts = false, arc.kHeuristicTilerLayouts = true, arc.kIsBf16Conversion = true, arc.kLayoutTimeout = 1000 : i64, arc.kLegalizeDataflow = true, arc.kLegalizeSamples = false, arc.kLowered = true, arc.kMacAutogen = true, arc.kMaximumGroupLatencyFactor = 5.000000e-02 : f32, arc.kMoveViews = false, arc.kOptimizationLevel = 3 : i64, arc.kOptimizeDramTransfers = 1 : i64, arc.kOutputFolder = "/qfs/people/jain432/pacer_saudade/code/ProxyTSPRD/scripts/test/sambanova/logreg", arc.kOverrideMaxFanout = 0 : i64, arc.kPefMetadataacc_report_json = "None", arc.kPefMetadataacc_test = "False", arc.kPefMetadataamp_level = "4", arc.kPefMetadataarc_debug_mode = "False", arc.kPefMetadatabatch_size = "1", arc.kPefMetadatabench_report_json = "None", arc.kPefMetadatackpt_dir = "", arc.kPefMetadatacompiled_stats_json = "None", arc.kPefMetadatacompiler_mode = "", arc.kPefMetadatadata_dir = "mnist_data", arc.kPefMetadatadata_name = "mnist", arc.kPefMetadatadata_parallel = "True", arc.kPefMetadatadata_parallel_mode = "normal", arc.kPefMetadatadata_type = "image", arc.kPefMetadatadataloader = "torchloader", arc.kPefMetadatadebug = "False", arc.kPefMetadatadefault_device = "DDR", arc.kPefMetadatadense_adam_fast_grad_compute = "False", arc.kPefMetadatadev_mode = "False", arc.kPefMetadatadisable_bf16_conversion = "False", arc.kPefMetadatadisable_mac_tiling = "False", arc.kPefMetadatadisable_retry_lower_visible_resources = "False", arc.kPefMetadatadistlearn_config = "", arc.kPefMetadatadropout_tiling_legalizer_error = "False", arc.kPefMetadatadump_accuracy_debug_info = "False", arc.kPefMetadatadump_compiled_stats_json = "False", arc.kPefMetadatadump_traced_graph = "False", arc.kPefMetadataenable_buffer_trial_compile = "False", arc.kPefMetadataenable_conv2d_conversion = "False", arc.kPefMetadataenable_conv_tiling = "False", arc.kPefMetadataenable_hd_retry_lower_visible_resources = "False", arc.kPefMetadataenable_hypersection = "False", arc.kPefMetadataenable_node_trial_compile = "False", arc.kPefMetadataenable_node_trial_compile_logging = "False", arc.kPefMetadataenable_profiler = "False", arc.kPefMetadataenable_stochastic_rounding = "False", arc.kPefMetadataforce_node_proximity = "False", arc.kPefMetadatafp32_params = "False", arc.kPefMetadatafuse_fwd_bwd = "False", arc.kPefMetadatagen_tensorboard = "False", arc.kPefMetadatagrad_accumulation_steps = "1", arc.kPefMetadatahas_human_decision = "False", arc.kPefMetadatahost_fifo = "False", arc.kPefMetadatahypersection_arc = "False", arc.kPefMetadatainclude_read_stall_cycles = "False", arc.kPefMetadatainference = "False", arc.kPefMetadatainput_layout = "None", arc.kPefMetadatajson = "None", arc.kPefMetadatajson_counters = "", arc.kPefMetadatalabel_type = "classes", arc.kPefMetadatalatency_budget_bwd = "None", arc.kPefMetadatalatency_budget_fwd = "None", arc.kPefMetadatalisten_for_input = "False", arc.kPefMetadatalocal_rank = "0", arc.kPefMetadatalog_dir = "None", arc.kPefMetadatalogger_dir = "output", arc.kPefMetadatalogger_name = "default", arc.kPefMetadatalr = "0.0015", "arc.kPefMetadatamac_conv_tiling_c++" = "False", arc.kPefMetadatamac_only = "False", arc.kPefMetadatamac_print_mapping_ir = "False", arc.kPefMetadatamac_split_cat_as_stage_buf = "False", arc.kPefMetadatamac_templatedb_dir = "", arc.kPefMetadatamac_templatedb_dir_backup_to = "", arc.kPefMetadatamac_templatedb_dir_init_from = "", arc.kPefMetadatamac_v1 = "False", arc.kPefMetadatamapping = "section", arc.kPefMetadatamax_expected_mac_latency = "-1.0", arc.kPefMetadatamax_mac_loop_attempt = "-1", arc.kPefMetadatamax_tiling_depth = "None", arc.kPefMetadatametapipe_disable = "False", arc.kPefMetadatamicrobatch_size = "None", arc.kPefMetadatamin_duration = "0.0", arc.kPefMetadatamlir_file_name = "None", arc.kPefMetadatamock_inference = "False", arc.kPefMetadatamodel = "LogReg(\0A  (lin_layer): Linear(in_features=784, out_features=10, bias=False)\0A  (criterion): CrossEntropyLoss()\0A)", arc.kPefMetadatamodel_name = "logreg", arc.kPefMetadatamodel_parallel = "False", arc.kPefMetadatamodelbox = "False", arc.kPefMetadatamomentum = "0.0", arc.kPefMetadatampirun = "False", arc.kPefMetadatan_chips = "1", arc.kPefMetadatandtest = "False", arc.kPefMetadatandtest_mp = "False", arc.kPefMetadatanum_classes = "10", arc.kPefMetadatanum_epochs = "1", arc.kPefMetadatanum_features = "784", arc.kPefMetadatanum_iterations = "100", arc.kPefMetadatanum_sections = "None", arc.kPefMetadatanum_spatial_batches = "1", arc.kPefMetadatanum_steps = "-1", arc.kPefMetadatanum_tiles = "-1", arc.kPefMetadataoptim = "sgd", arc.kPefMetadataoptim_level = "o3", arc.kPefMetadataoptimize_concat_split = "False", arc.kPefMetadatapef = "None", arc.kPefMetadataplot = "None", arc.kPefMetadatapod_name = "starters", arc.kPefMetadatapp_lamb_optimizer = "False", arc.kPefMetadataprofiler_trace = "None", arc.kPefMetadatarecompute_ratio = "-1.0", arc.kPefMetadatareduce_on_rdu = "False", arc.kPefMetadataresources_scaling_factors = "['-1.0', '-1.0', '-1.0', '-1.0']", arc.kPefMetadatarun_analysis_pass = "False", arc.kPefMetadatarun_graph_only = "False", arc.kPefMetadatasafe_mode = "False", arc.kPefMetadatasamba_plot = "False", arc.kPefMetadatasamba_version = "1.14.3", arc.kPefMetadatasambahd = "False", arc.kPefMetadatasambatune_graph = "False", arc.kPefMetadatascript = "logreg.py", arc.kPefMetadatasection_cut_beam_search = "[]", arc.kPefMetadatasection_cut_sort_order = "3", arc.kPefMetadatasingle_opt_sec = "False", arc.kPefMetadataskip_instrumentation_on_read0 = "False", arc.kPefMetadataskip_instrumentation_on_read1 = "False", arc.kPefMetadatastage_instrumentation = "none", "arc.kPefMetadatastop_mac_c++" = "False", "arc.kPefMetadatastop_mac_named_dims_c++" = "False", arc.kPefMetadatastrict_auto_cast = "False", arc.kPefMetadatastrict_conversion = "False", arc.kPefMetadatatask_name = "classification", arc.kPefMetadatatensor_parallel = "none", arc.kPefMetadatatile_orientation = "auto", arc.kPefMetadatatraced_attributes_folder = "", arc.kPefMetadataunroll_first = "False", arc.kPefMetadatause_correct_tiling_cost_model = "False", arc.kPefMetadatause_integrated_bias = "False", arc.kPefMetadatavalidate_mac_resource_prediction = "False", arc.kPefMetadataverbose = "0", arc.kPefMetadatavisualize = "False", arc.kPefMetadataweight_caching = "False", arc.kPefMetadataweight_decay = "0.0003", arc.kPefMetadataweight_layout = "None", arc.kPefMetadataweight_norm = "False", arc.kPefMetadataworld_size = "1", arc.kPefMetadatayaml_config = "None", arc.kPefName = "logreg", arc.kPlasmaIncludeReadStallCycles = false, arc.kPlasmaSkipInstrumentationOnRead0 = false, arc.kPlasmaSkipInstrumentationOnRead1 = false, arc.kPlasmaStageInstrumentation = "none", arc.kPrintSrcs = [], arc.kResourceAwareBuffers = false, arc.kSambaTuneGraph = false, arc.kSkipBufferBandwidthWeight = 1 : i64, arc.kSkipBufferMaxDepth = 4096 : i64, arc.kSkipBufferMaxFanin = 8 : i64, arc.kSkipBufferPmuWeight = 1 : i64, arc.kSplitSkipBuffer = true, arc.kStrictNodeNameOrdering = true, arc.kTileSize = 5 : i64, arc.kUniqueIdCounter = 19 : i64, arc.kUseTBufferEverywhere = false, arc.kVerbose = false}  {
  module @preface  {
    module_terminator {kSourceContext = #loc0}
  }
  module @templates  {
    module_terminator {kSourceContext = #loc0}
  }
  module @sections  {
    %0 = "air.Tensor"() {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kWeightGroupID = -1 : i64, distribution = 7 : i32, distribution_gain = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [], kIsBubbledRecomputeNode = false, kIsCached = false, kIsWeight = true, kMacConsumerNames = [["logreg__lin_layer__linear", "logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt"]], kMacID = "logreg__lin_layer__weight", kMacMemoryType = 3 : i64, kName = "logreg__lin_layer__weight", kNodeCategory = 5 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_0", "logreg__lin_layer__weight_dim_1"]], kSourceContext = #loc1, kToDeviceTransform = "", kUniqueId = 0 : i64, kUserCreated = true} : () -> tensor<10x784xbf16>
    %1 = "air.Tensor"() {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kIsHostFifo = false, air.kWeightGroupID = -1 : i64, distribution = 6 : i32, distribution_max = 1.000000e-01 : f64, distribution_min = -1.000000e-01 : f64, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = ".transpose(-1,-2)", kInputsNamedDims = [], kIsBubbledRecomputeNode = false, kIsInputOnly = true, kIsRngSeed = false, kIsWeight = false, kMacConsumerNames = [["logreg__lin_layer__linear", "logreg__lin_layer__linear_bwd_weight"]], kMacID = "image", kMacMemoryType = 4 : i64, kName = "image", kNodeCategory = 5 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_1", "B"]], kSourceContext = #loc2, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = ".transpose(-1,-2)", kUniqueId = 1 : i64, kUserCreated = true, kUserDefinedNamedDims = ["B", "F"]} : () -> tensor<784x1xbf16>
    %2 = "air.Tensor"() {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kIsHostFifo = false, air.kWeightGroupID = -1 : i64, distribution = 6 : i32, distribution_max = 1.000000e-01 : f64, distribution_min = -1.000000e-01 : f64, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [], kIsBubbledRecomputeNode = false, kIsInputOnly = true, kIsRngSeed = false, kIsWeight = false, kMacConsumerNames = [["logreg__criterion__crossentropyloss", "logreg__criterion__crossentropyloss_bwd_loss"]], kMacID = "label", kMacMemoryType = 4 : i64, kName = "label", kNodeCategory = 5 : i64, kOutputsNamedDims = [["B"]], kSourceContext = #loc3, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = ".short()", kUniqueId = 2 : i64, kUserCreated = true, kUserDefinedNamedDims = ["B"]} : () -> tensor<1xi16>
    %3 = "air.Tensor"() {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__criterion__crossentropyloss__outputs__0", air.kWeightGroupID = -1 : i64, distribution = 6 : i32, distribution_max = 1.000000e+00 : f64, distribution_min = 1.000000e+00 : f64, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = ".mean()", kInputsNamedDims = [], kIsBubbledRecomputeNode = false, kIsInputOnly = true, kIsRngSeed = false, kIsWeight = false, kMacConsumerNames = [["logreg__criterion__crossentropyloss_bwd_loss"]], kMacID = "logreg__criterion__crossentropyloss__outputs__0__grad", kMacMemoryType = 3 : i64, kName = "logreg__criterion__crossentropyloss__outputs__0__grad", kNodeCategory = 5 : i64, kOutputsNamedDims = [["B"]], kSourceContext = #loc4, kSparsity = -1.000000e+00 : f64, kTensorType = 1 : i64, kToDeviceTransform = "", kUniqueId = 3 : i64, kUserCreated = true} : () -> tensor<1xbf16>
    %4 = "air.Tensor"() {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__linear__outputs__0", air.kWeightGroupID = -1 : i64, distribution = 6 : i32, distribution_max = 1.000000e+00 : f64, distribution_min = 1.000000e+00 : f64, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [], kIsBubbledRecomputeNode = false, kIsInputOnly = false, kIsRngSeed = false, kIsWeight = false, kMacConsumerNames = [["logreg__lin_layer__linear_t_output0_bwd_addn0"]], kMacID = "logreg__lin_layer__linear__outputs__0__grad", kMacMemoryType = 3 : i64, kName = "logreg__lin_layer__linear__outputs__0__grad", kNodeCategory = 5 : i64, kOutputsNamedDims = [["B", "logreg__lin_layer__weight_dim_0"]], kSourceContext = #loc5, kSparsity = -1.000000e+00 : f64, kTensorType = 1 : i64, kToDeviceTransform = "", kUniqueId = 4 : i64, kUserCreated = true} : () -> tensor<1x10xbf16>
    %5 = "air.Tensor"() {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__weight", air.kWeightGroupID = -1 : i64, distribution = 7 : i32, distribution_gain = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [], kIsBubbledRecomputeNode = false, kIsCached = false, kIsWeight = true, kMacConsumerNames = [["logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt"]], kMacID = "logreg__lin_layer__weight__sgd0__momentum", kMacMemoryType = 3 : i64, kName = "logreg__lin_layer__weight__sgd0__momentum", kNodeCategory = 5 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_0", "logreg__lin_layer__weight_dim_1"]], kSourceContext = #loc6, kToDeviceTransform = "", kUniqueId = 5 : i64, kUserCreated = true} : () -> tensor<10x784xbf16>
    %6 = "air.Linear"(%0, %1) {air.kEstimateToleranceLatency = 1.000000e-01 : f64, air.kEstimateToleranceUtilization = 1.000000e-01 : f64, air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kHasBias = false, kInputsNamedDims = [["logreg__lin_layer__weight_dim_0", "logreg__lin_layer__weight_dim_1"], ["logreg__lin_layer__weight_dim_1", "B"]], kIsBubbledRecomputeNode = false, kMacConsumerNames = [["logreg__lin_layer__linear_t_output0"]], kMacID = "logreg__lin_layer__linear", kName = "logreg__lin_layer__linear", kNodeCategory = 1 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_0", "B"]], kSourceContext = #loc7, kUniqueId = 6 : i64, kUserCreated = true} : (tensor<10x784xbf16>, tensor<784x1xbf16>) -> tensor<10x1xbf16>
    %7 = "air.Transpose"(%6) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kInputsNamedDims = [["logreg__lin_layer__weight_dim_0", "B"]], kIsBubbledRecomputeNode = false, kMacConsumerNames = [["logreg__criterion__crossentropyloss", "logreg__lin_layer__linear__outputs__0", "logreg__criterion__crossentropyloss_bwd_loss"]], kMacID = "logreg__lin_layer__linear_t_output0", kName = "logreg__lin_layer__linear_t_output0", kNoExperimentalHD = false, kNodeCategory = 1 : i64, kOutputsNamedDims = [["B", "logreg__lin_layer__weight_dim_0"]], kSourceContext = #loc8, kUniqueId = 7 : i64, kUserCreated = true} : (tensor<10x1xbf16>) -> tensor<1x10xbf16>
    %8 = "air.CrossEntropy"(%7, %2) {air.kEstimateToleranceLatency = 1.000000e-01 : f64, air.kEstimateToleranceUtilization = 1.000000e-01 : f64, air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kInputsNamedDims = [["B", "logreg__criterion__crossentropyloss_num_classes"], ["B"]], kIsBubbledRecomputeNode = false, kMacConsumerNames = [["logreg__criterion__crossentropyloss__outputs__0"]], kMacID = "logreg__criterion__crossentropyloss", kName = "logreg__criterion__crossentropyloss", kNodeCategory = 1 : i64, kOutputsNamedDims = [["B"]], kReductionMode = 1 : i64, kSourceContext = #loc9, kUniqueId = 8 : i64, kUserCreated = true} : (tensor<1x10xbf16>, tensor<1xi16>) -> tensor<1xbf16>
    "air.Output"(%7) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kIsHostFifo = false, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [["B", "logreg__lin_layer__weight_dim_0"]], kIsBubbledRecomputeNode = false, kIsInputBwd = false, kIsMask = false, kMacConsumerNames = [], kMacID = "logreg__lin_layer__linear__outputs__0", kMacMemoryType = 4 : i64, kName = "logreg__lin_layer__linear__outputs__0", kNeedsDataParallelReduce = false, kNodeCategory = 5 : i64, kOutputsNamedDims = [], kSourceContext = #loc10, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = "", kUniqueId = 9 : i64, kUserCreated = true} : (tensor<1x10xbf16>) -> ()
    %9 = "air.CrossEntropyGrad"(%7, %2, %3) {air.kEstimateToleranceLatency = 1.000000e-01 : f64, air.kEstimateToleranceUtilization = 1.000000e-01 : f64, air.kFwdNodeID = "logreg__criterion__crossentropyloss", air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kHasLossInput = true, kInputsNamedDims = [["B", "logreg__criterion__crossentropyloss_num_classes"], ["B"], ["B"]], kIsBubbledRecomputeNode = false, kMacConsumerNames = [["logreg__lin_layer__linear_t_output0_bwd_addn0"]], kMacID = "logreg__criterion__crossentropyloss_bwd_loss", kName = "logreg__criterion__crossentropyloss_bwd_loss", kNodeCategory = 2 : i64, kOutputsNamedDims = [["B", "logreg__criterion__crossentropyloss_num_classes"]], kSourceContext = #loc11, kUniqueId = 10 : i64, kUserCreated = true} : (tensor<1x10xbf16>, tensor<1xi16>, tensor<1xbf16>) -> tensor<1x10xbf16>
    "air.Output"(%8) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kIsHostFifo = false, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = ".mean()", kInputsNamedDims = [["B"]], kIsBubbledRecomputeNode = false, kIsInputBwd = false, kIsMask = false, kMacConsumerNames = [], kMacID = "logreg__criterion__crossentropyloss__outputs__0", kMacMemoryType = 4 : i64, kName = "logreg__criterion__crossentropyloss__outputs__0", kNeedsDataParallelReduce = false, kNodeCategory = 5 : i64, kOutputsNamedDims = [], kSourceContext = #loc12, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = "", kUniqueId = 11 : i64, kUserCreated = true} : (tensor<1xbf16>) -> ()
    %10 = "air.AddN"(%9, %4) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__linear_t_output0", air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kInputsNamedDims = [["B", "logreg__lin_layer__weight_dim_0"], ["B", "logreg__lin_layer__weight_dim_0"]], kIsBubbledRecomputeNode = false, kMacConsumerNames = [["logreg__lin_layer__linear_t_output0_bwd"]], kMacID = "logreg__lin_layer__linear_t_output0_bwd_addn0", kName = "logreg__lin_layer__linear_t_output0_bwd_addn0", kNodeCategory = 2 : i64, kOutputsNamedDims = [["B", "logreg__lin_layer__weight_dim_0"]], kSourceContext = #loc13, kUniqueId = 12 : i64, kUserCreated = true} : (tensor<1x10xbf16>, tensor<1x10xbf16>) -> tensor<1x10xbf16>
    %11 = "air.Transpose"(%10) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__linear_t_output0", air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kInputsNamedDims = [["B", "logreg__lin_layer__weight_dim_0"]], kIsBubbledRecomputeNode = false, kMacConsumerNames = [["logreg__lin_layer__linear_bwd_weight"]], kMacID = "logreg__lin_layer__linear_t_output0_bwd", kName = "logreg__lin_layer__linear_t_output0_bwd", kNoExperimentalHD = false, kNodeCategory = 2 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_0", "B"]], kSourceContext = #loc14, kUniqueId = 13 : i64, kUserCreated = true} : (tensor<1x10xbf16>) -> tensor<10x1xbf16>
    %12 = "air.LinearWeightGrad"(%1, %11) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__linear", air.kWeightGroupID = -1 : i64, kConfigured = true, kDoRecompute = false, kEnableLoopBuffer = false, kFwdNodeInputNumBytesAfterSplits = 1 : i64, kInputsNamedDims = [["logreg__lin_layer__weight_dim_1", "B"], ["logreg__lin_layer__weight_dim_0", "B"]], kIntegratedBias = false, kIsBubbledRecomputeNode = false, kIsWeightTying = false, kMacConsumerNames = [["logreg__lin_layer__weight__grad__output", "logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt"]], kMacID = "logreg__lin_layer__linear_bwd_weight", kName = "logreg__lin_layer__linear_bwd_weight", kNoBias = true, kNodeCategory = 2 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_0", "logreg__lin_layer__weight_dim_1"]], kSourceContext = #loc15, kUniqueId = 14 : i64, kUserCreated = true} : (tensor<784x1xbf16>, tensor<10x1xbf16>) -> tensor<10x784xbf16>
    "air.Output"(%12) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__weight", air.kIsHostFifo = false, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [["logreg__lin_layer__weight_dim_0", "logreg__lin_layer__weight_dim_1"]], kIsBubbledRecomputeNode = false, kIsInputBwd = false, kIsMask = false, kMacConsumerNames = [], kMacID = "logreg__lin_layer__weight__grad__output", kMacMemoryType = 3 : i64, kName = "logreg__lin_layer__weight__grad", kNeedsDataParallelReduce = false, kNodeCategory = 5 : i64, kOutputType = 1 : i64, kOutputsNamedDims = [], kSourceContext = #loc16, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = "", kUniqueId = 15 : i64, kUserCreated = true, kZeroFillDram = false} : (tensor<10x784xbf16>) -> ()
    %13:2 = "air.SGD"(%0, %5, %12) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kFwdNodeID = "logreg__lin_layer__weight", air.kWeightGroupID = -1 : i64, kArgInGroup = "", kConfigured = true, kDecayRate = 3.0000001424923539E-4 : f64, kDoRecompute = false, kInputsNamedDims = [["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"], ["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"], ["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"]], kIsBubbledRecomputeNode = false, kLrRate = 0.001500000013038516 : f64, kMacConsumerNames = [["logreg__lin_layer__weight__output"], ["logreg__lin_layer__weight__sgd0__momentum__output"]], kMacID = "logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt", kMixP = true, kMomentumRate = 0.000000e+00 : f64, kName = "logreg__lin_layer__weight__logreg__lin_layer__linear_bwd_weight_opt", kNodeCategory = 4 : i64, kOutputsNamedDims = [["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"], ["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"]], kSourceContext = #loc17, kUniqueId = 16 : i64, kUserCreated = true} : (tensor<10x784xbf16>, tensor<10x784xbf16>, tensor<10x784xbf16>) -> (tensor<10x784xbf16>, tensor<10x784xbf16>)
    "air.Output"(%13#0) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kIsHostFifo = false, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"]], kIsBubbledRecomputeNode = false, kIsInputBwd = false, kIsMask = false, kMacConsumerNames = [], kMacID = "logreg__lin_layer__weight__output", kMacMemoryType = 3 : i64, kName = "logreg__lin_layer__weight", kNeedsDataParallelReduce = false, kNodeCategory = 5 : i64, kOutputsNamedDims = [], kSourceContext = #loc18, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = "", kUniqueId = 17 : i64, kUserCreated = true} : (tensor<10x784xbf16>) -> ()
    "air.Output"(%13#1) {air.kEstimateToleranceLatency = -1.000000e+00 : f64, air.kEstimateToleranceUtilization = -1.000000e+00 : f64, air.kIsHostFifo = false, kCompression = 1.000000e+00 : f64, kConfigured = true, kDoRecompute = false, kFromDeviceTransform = "", kInputsNamedDims = [["logreg__lin_layer__weight_dim_0__opt", "logreg__lin_layer__weight_dim_1__opt"]], kIsBubbledRecomputeNode = false, kIsInputBwd = false, kIsMask = false, kMacConsumerNames = [], kMacID = "logreg__lin_layer__weight__sgd0__momentum__output", kMacMemoryType = 3 : i64, kName = "logreg__lin_layer__weight__sgd0__momentum", kNeedsDataParallelReduce = false, kNodeCategory = 5 : i64, kOutputsNamedDims = [], kSourceContext = #loc19, kSparsity = -1.000000e+00 : f64, kToDeviceTransform = "", kUniqueId = 18 : i64, kUserCreated = true} : (tensor<10x784xbf16>) -> ()
    module_terminator {kSourceContext = #loc0}
  }
  module @schedule  {
    module_terminator {kSourceContext = #loc0}
  }
  module @rnn_function  {
    module_terminator {kSourceContext = #loc0}
  }
  module_terminator {kSourceContext = #loc0}
}


