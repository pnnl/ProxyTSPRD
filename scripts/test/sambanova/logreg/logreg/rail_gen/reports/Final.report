========= Summary IR ========
tbuffer partition_0_0__tbuf1a_0_0_81
    loc("LogregTorchSamba.cpp":161:0)
    layout: <INT16[1]RM/64@0x0> vec_order: {0} vec_dim: 0 depth: 1 dims: {32}
    pmu: D_0_0 depth: 1 capacity: 32 (words) is_transpose: 0
        uctx: D_0_0.kFrontDynamicWriteCtx
            loc("software/compiler/rail/src/lib/node/tbuffer/TBufferContext.cpp":469:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(kFrontDynamicWriteCtx_iter0,) (1 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                cout[1000] - src: L0(kFrontDynamicWriteCtx_iter0,)
                cout[wdone__] - src: L0(kFrontDynamicWriteCtx_iter0,)
        uctx: D_0_0.LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputY
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1728:0)
            pacing_window: 1 port: READ0 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 1)
                ctx done: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputY_iter0,) (1 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 0
                vec = 0
            triggers:
                tb init: 0 pushif: cin[phase2_strip_done] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputY_iter0,)
                tb init: 0 pushif: cin[kFrontDynamicWriteCtx_wdone_in__] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputY_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputY_iter0,)
========= Summary IR ========
tbuffer partition_0_0__tbuf1a_0_0_82
    loc("LogregTorchSamba.cpp":172:0)
    layout: <BF16[10, 1]RVCM/64@0x0> vec_order: {1, 0} vec_dim: 1 depth: 1 dims: {10, 32}
    pmu: D_0_0 depth: 1 capacity: 320 (words) is_transpose: 0
        uctx: D_0_0.kDefaultWrite
            loc("software/compiler/rail/src/lib/node/tbuffer/TBufferContext.cpp":469:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (10 # steps): 
                  iter[0] : (0 until 640 by 64)
                ctx done: L0(kDefaultWrite_iter0,) (10 # steps)
            addresses:
                addr : (0 until 640 by 64).c0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 1 pushif: cin[begin] popif: L0(kDefaultWrite_iter0,)
                cout[1000] - src: L0(kDefaultWrite_iter0,)
                cout[done] - src: L0(kDefaultWrite_iter0,)
        uctx: D_0_0.LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputXVec_0
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1504:0)
            pacing_window: 12 port: READ1 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (24 # steps): 
                  iter[0] : (0 until 2 by 1)
                  iter[1] : (0 until 768 by 64)
                ctx done: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter0,) (24 # steps)
            addresses:
                addr : (0 until 768 by 64).c1
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kFrameReady] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter0,)
                tb init: 1 pushif: cin[phase3_strip_done] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter0,)
                tb init: 1 pushif: (cin[phase0_strip_done] || cin[phase1_strip_done]) popif: L1(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter1,)
                tb init: 1 pushif: cin[scalar_done] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter0,)
                cout[kSecondReplayDone] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXVec_0_iter0,)
        uctx: D_0_0.LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputXScalar
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1571:0)
            pacing_window: 1 port: READ0 ctxid: 1 concurrency grp: 1 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 1)
                ctx done: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXScalar_iter0,) (1 # steps)
            addresses:
                addr : (((sin[label] < 10) ? sin[label] : 0) * 64)
                ofst : 0
                pred : 0
                vec = 0
            triggers:
                sin[label] - popif: ctx_en
                tb init: 0 pushif: cin[phase2_strip_done] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXScalar_iter0,)
                tb init: 0 pushif: cin[second_replay_done_0] popif: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXScalar_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXScalar_iter0,)
                cout[scalar_done] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXScalar_iter0,)
                cout[frame_done] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kInputXScalar_iter0,)
        uctx: D_0_0.dummy_LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputXVec_0_to_LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputXScalar_launcher
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1504:0)
            pacing_window: default port: READ0 ctxid: 0 metapipe_iter (post divider): {} 
            iter_chains:
            addresses:
            triggers:
        uctx: D_0_0.dummy_LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputXVec_0_to_LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kInputXScalar_landing
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1504:0)
            pacing_window: default port: READ1 ctxid: 1 metapipe_iter (post divider): {} 
            iter_chains:
            addresses:
            triggers:
========= Summary IR ========
tcompute partition_0_0__LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_tcompute0
"rail.tcompute"() ( {
  %0 = "rail.const"() {kValue = -9.984000e+04 : bf16} : () -> bf16
  %1 = "rail.const"() {kValue = 12 : i64} : () -> ui16
  %2 = "rail.const"() {kValue = 32 : i64} : () -> ui16
  %3 = "rail.const"() {kValue = 10 : i64} : () -> ui16
  %4 = "rail.const"() {kValue = 0.000000e+00 : bf16} : () -> bf16
  %5 = "rail.const"() {kValue = 1.000000e+00 : bf16} : () -> bf16
  %6 = "rail.const"() {kValue = 0 : i64} : () -> ui16
  %7 = "rail.const"() {kValue = 1 : i64} : () -> ui16
  "rail.TLink"() {kDst = @tcompute0::@phase0::@tcompute0_tcompute_phase0_control_in_kBegin, kSrc = @tcompute0::@phase3::@tcompute0_tcompute_phase3_control_out_kDone} : () -> ()
  "rail.TLink"() {kDst = @tcompute0::@phase1::@tcompute0_tcompute_phase1_control_in_kBegin, kSrc = @tcompute0::@phase0::@tcompute0_tcompute_phase0_control_out_kDone} : () -> ()
  "rail.TLink"() {kDst = @tcompute0::@phase2::@tcompute0_tcompute_phase2_control_in_kBegin, kSrc = @tcompute0::@phase1::@tcompute0_tcompute_phase1_control_out_kDone} : () -> ()
  "rail.TLink"() {kDst = @tcompute0::@phase3::@tcompute0_tcompute_phase3_control_in_kBegin, kSrc = @tcompute0::@phase2::@tcompute0_tcompute_phase2_control_out_kDone} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase0_vector_in_4000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase0_vector_out_3000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase0_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase0_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 0 : i64}, kCtxID = 0 : i8, kDestCtxId = [1], kName = "phase0", kNode = 66142528 : i64, sym_name = "phase0_handle"} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase1_vector_in_8000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase1_vector_in_9000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase1_vector_out_13000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase1_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase1_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 0 : i64}, kCtxID = 1 : i8, kDestCtxId = [2], kName = "phase1", kNode = 66147248 : i64, sym_name = "phase1_handle"} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase2_vector_in_15000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase2_vector_out_17000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase2_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase2_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 0 : i64}, kCtxID = 2 : i8, kDestCtxId = [3], kName = "phase2", kNode = 66152032 : i64, sym_name = "phase2_handle"} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kScalarLink", kPortType = "rail.io.scalar_in", sym_name = "tcompute0_tcompute_phase3_scalar_in_21000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kScalarLink", kPortType = "rail.io.scalar_in", sym_name = "tcompute0_tcompute_phase3_scalar_in_25000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kScalarLink", kPortType = "rail.io.scalar_in", sym_name = "tcompute0_tcompute_phase3_scalar_in_10000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kScalarLink", kPortType = "rail.io.scalar_out", sym_name = "tcompute0_tcompute_phase3_scalar_out_31000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase3_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase3_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 1 : i64}, kCtxID = 3 : i8, kDestCtxId = [0], kName = "phase3", kNode = 66156768 : i64, sym_name = "phase3_handle"} : () -> ()
  "rail.pcu"() ( {
    "rail.context"() ( {
      %8 = "rail.counter"(%6, %2, %7) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %10 = "rail.ctxdone"(%9) : (i1) -> i1
      %11 = "rail.counter"(%6, %7, %1) {Par = 1 : i32, kIterPos = 1 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %12 = "rail.io.vector_in"() {kCtx = 66142528 : i64, kCtxName = "phase0", kLanes = [], kPortName = "4000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase0_vector_in_4000"} : () -> vector<32xbf16>
      %13 = "rail.io.vector_out"() {kCtx = 66142528 : i64, kCtxName = "phase0", kLanes = [], kPortName = "3000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase0_vector_out_3000"} : () -> vector<32xbf16>
      %14:2 = "rail.accumulator"() {kForIterPos = [0], kInitValue = 0xFFF0000000000000 : f64, kNumStages = 1 : i64} : () -> (vector<32xbf16>, vector<1x32xbf16>)
      "rail.iterchain"(%8, %11) {kForIterPos = [0], kName = "chain"} : (ui16, ui16) -> ()
      %15 = "rail.move"(%12) {kDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %16 = "rail.move"(%11) {kInstructionStageType = 1 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 0 : i64} : (ui16) -> vector<32xui16>
      %17 = "rail.move"(%11) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (ui16) -> vector<32xui16>
      %18 = "rail.less_than"(%17, %3) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsBinaryOp = true, kIsBooleanOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 1 : i64} : (vector<32xui16>, ui16) -> vector<32xi1>
      %19 = "rail.fwd"(%15) {kDataPathRegisters = [[1, 4, 0]], kInputDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %20 = "rail.ifelse"(%18, %19, %0) {kDataPathRegisters = [[2, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 2 : i64} : (vector<32xi1>, vector<32xbf16>, bf16) -> vector<32xbf16>
      %21 = "rail.fwd"(%20) {kDataPathRegisters = [[3, 0, 0]], kInputDataPathRegisters = [[2, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %22 = "rail.fwd"(%21) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %23 = "rail.fwd"(%22) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %24 = "rail.maxacc"(%23) {kDataPathRegisters = [[6, 0, 0]], kInstructionStageType = 2 : i64, kIsAccOp = true, kIsDataPathOp = true, kIsUnaryOp = true, kRegAllocInstLatency = 6 : i64} : (vector<32xbf16>) -> vector<32xbf16>
      %25 = "rail.fwd"(%24) {kDataPathRegisters = [[7, 0, 0]], kInputDataPathRegisters = [[6, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%25, %13) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %26 = "rail.ctrdone"(%11) {kForIterPos = [0]} : (ui16) -> i1
      "rail.drain"(%26) {kForIterPos = [0], kIsControlOp = true} : (i1) -> ()
      %27 = "rail.io.control_in"() {kCtx = 66142528 : i64, kCtxName = "phase0", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase0_control_in_kBegin"} : () -> i1
      %28 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%27, %28) {kInit = 1 : i32} : (i1, i1) -> ()
      %29 = "rail.io.control_out"() {kCtx = 66142528 : i64, kCtxName = "phase0", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase0_control_out_kDone"} : () -> i1
      %30 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%30, %29) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 0 : i64, kNetwork = 0 : i64, kSeqId = -1 : i64, kSubCounter = 0 : i64}, kCtxID = 0 : i8, kDestCtxId = [1], kIsElaboratedForPCU = true, kName = "phase0", kNameBeforeSplit = "phase0", kNode = 66142528 : i64, kRegAllocSuccess = true, sym_name = "phase0"} : () -> ()
    "rail.context"() ( {
      %8 = "rail.counter"(%6, %7, %1) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.io.vector_in"() {kCtx = 66147248 : i64, kCtxName = "phase1", kLanes = [], kPortName = "8000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase1_vector_in_8000"} : () -> vector<32xbf16>
      %10 = "rail.io.vector_in"() {kCtx = 66147248 : i64, kCtxName = "phase1", kLanes = [], kPortName = "9000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase1_vector_in_9000"} : () -> vector<32xbf16>
      %11 = "rail.io.vector_out"() {kCtx = 66147248 : i64, kCtxName = "phase1", kLanes = [], kPortName = "13000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase1_vector_out_13000"} : () -> vector<32xbf16>
      "rail.iterchain"(%8) {kName = "chain"} : (ui16) -> ()
      %12 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %13 = "rail.ctxdone"(%12) : (i1) -> i1
      %14 = "rail.move"(%10) {kDataPathRegisters = [[0, 5, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %15 = "rail.move"(%9) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %16 = "rail.sub"(%15, %14) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [0], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 3 : i64} : (vector<32xbf16>, vector<32xbf16>) -> vector<32xbf16>
      %17 = "rail.fwd"(%16) {kDataPathRegisters = [[2, 0, 0]], kInputDataPathRegisters = [[1, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %18 = "rail.fwd"(%17) {kDataPathRegisters = [[3, 0, 0]], kInputDataPathRegisters = [[2, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %19 = "rail.fwd"(%18) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %20 = "rail.fwd"(%19) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %21 = "rail.fwd"(%20) {kDataPathRegisters = [[6, 0, 0]], kInputDataPathRegisters = [[5, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %22 = "rail.exp"(%21) {kDataPathRegisters = [[7, 0, 0]], kForIterPos = [0], kInstructionStageType = 3 : i64, kIsDataPathOp = true, kIsTailComplexOp = true, kIsUnaryOp = true, kRegAllocInstLatency = 10 : i64} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%22, %11) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %23 = "rail.io.control_in"() {kCtx = 66147248 : i64, kCtxName = "phase1", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase1_control_in_kBegin"} : () -> i1
      %24 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%23, %24) {kInit = 0 : i32} : (i1, i1) -> ()
      %25 = "rail.io.control_out"() {kCtx = 66147248 : i64, kCtxName = "phase1", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase1_control_out_kDone"} : () -> i1
      %26 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%26, %25) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 1 : i64, kNetwork = 0 : i64, kSeqId = -1 : i64, kSubCounter = 0 : i64}, kCtxID = 1 : i8, kDestCtxId = [2], kIsElaboratedForPCU = true, kName = "phase1", kNameBeforeSplit = "phase1", kNode = 66147248 : i64, kRegAllocSuccess = true, sym_name = "phase1"} : () -> ()
    "rail.context"() ( {
      %8 = "rail.counter"(%6, %2, %7) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %10 = "rail.ctxdone"(%9) : (i1) -> i1
      %11 = "rail.counter"(%6, %7, %3) {Par = 1 : i32, kIterPos = 1 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %12 = "rail.io.vector_in"() {kCtx = 66152032 : i64, kCtxName = "phase2", kLanes = [], kPortName = "15000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase2_vector_in_15000"} : () -> vector<32xbf16>
      %13 = "rail.io.vector_out"() {kCtx = 66152032 : i64, kCtxName = "phase2", kLanes = [], kPortName = "17000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase2_vector_out_17000"} : () -> vector<32xbf16>
      %14:2 = "rail.accumulator"() {kForIterPos = [0], kInitValue = 0.000000e+00 : f32, kNumStages = 1 : i64} : () -> (vector<32xbf16>, vector<1x32xbf16>)
      "rail.iterchain"(%8, %11) {kForIterPos = [0], kName = "chain"} : (ui16, ui16) -> ()
      %15 = "rail.move"(%12) {kDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %16 = "rail.move"(%11) {kInstructionStageType = 1 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 0 : i64} : (ui16) -> vector<32xui16>
      %17 = "rail.move"(%11) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (ui16) -> vector<32xui16>
      %18 = "rail.less_than"(%17, %3) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsBinaryOp = true, kIsBooleanOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 1 : i64} : (vector<32xui16>, ui16) -> vector<32xi1>
      %19 = "rail.fwd"(%15) {kDataPathRegisters = [[1, 4, 0]], kInputDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %20 = "rail.ifelse"(%18, %19, %4) {kDataPathRegisters = [[2, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 2 : i64} : (vector<32xi1>, vector<32xbf16>, bf16) -> vector<32xbf16>
      %21 = "rail.macc"(%20, %5) {kDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsAccOp = true, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 5 : i64} : (vector<32xbf16>, bf16) -> vector<32xbf16>
      %22 = "rail.fwd"(%21) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %23 = "rail.fwd"(%22) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %24 = "rail.fwd"(%23) {kDataPathRegisters = [[6, 0, 0]], kInputDataPathRegisters = [[5, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %25 = "rail.ln"(%24) {kDataPathRegisters = [[7, 0, 0]], kForIterPos = [0], kInstructionStageType = 3 : i64, kIsDataPathOp = true, kIsTailComplexOp = true, kIsUnaryOp = true, kRegAllocInstLatency = 10 : i64} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%25, %13) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %26 = "rail.ctrdone"(%11) {kForIterPos = [0]} : (ui16) -> i1
      "rail.drain"(%26) {kForIterPos = [0], kIsControlOp = true} : (i1) -> ()
      %27 = "rail.io.control_in"() {kCtx = 66152032 : i64, kCtxName = "phase2", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase2_control_in_kBegin"} : () -> i1
      %28 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%27, %28) {kInit = 0 : i32} : (i1, i1) -> ()
      %29 = "rail.io.control_out"() {kCtx = 66152032 : i64, kCtxName = "phase2", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase2_control_out_kDone"} : () -> i1
      %30 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%30, %29) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 0 : i64, kNetwork = 0 : i64, kSeqId = -1 : i64, kSubCounter = 1 : i64}, kCtxID = 2 : i8, kDestCtxId = [3], kIsElaboratedForPCU = true, kName = "phase2", kNameBeforeSplit = "phase2", kNode = 66152032 : i64, kRegAllocSuccess = true, sym_name = "phase2"} : () -> ()
    "rail.context"() ( {
      %8 = "rail.counter"(%6, %7, %7) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.io.scalar_in"() {kCtx = 66156768 : i64, kCtxName = "phase3", kLanes = [], kPortName = "21000", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_scalar_in_21000"} : () -> bf16
      %10 = "rail.io.scalar_in"() {kCtx = 66156768 : i64, kCtxName = "phase3", kLanes = [], kPortName = "25000", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_scalar_in_25000"} : () -> bf16
      %11 = "rail.io.scalar_in"() {kCtx = 66156768 : i64, kCtxName = "phase3", kLanes = [], kPortName = "10000", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_scalar_in_10000"} : () -> bf16
      %12 = "rail.io.scalar_out"() {kCtx = 66156768 : i64, kCtxName = "phase3", kLanes = [], kPortName = "31000", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_scalar_out_31000"} : () -> bf16
      "rail.iterchain"(%8) {kName = "chain"} : (ui16) -> ()
      %13 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %14 = "rail.ctxdone"(%13) : (i1) -> i1
      %15 = "rail.move"(%9) {kDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (bf16) -> bf16
      %16 = "rail.move"(%10) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (bf16) -> bf16
      %17 = "rail.move"(%11) {kDataPathRegisters = [[0, 5, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (bf16) -> bf16
      %18 = "rail.sub"(%16, %17) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [0], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 3 : i64} : (bf16, bf16) -> bf16
      %19 = "rail.fwd"(%15) {kDataPathRegisters = [[1, 2, 0]], kInputDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      %20 = "rail.fwd"(%19) {kDataPathRegisters = [[1, 4, 0]], kInputDataPathRegisters = [[1, 2, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      %21 = "rail.sub"(%20, %18) {kDataPathRegisters = [[2, 0, 0]], kForIterPos = [0], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 6 : i64} : (bf16, bf16) -> bf16
      %22 = "rail.fwd"(%21) {kDataPathRegisters = [[3, 0, 0]], kInputDataPathRegisters = [[2, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      %23 = "rail.fwd"(%22) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      %24 = "rail.fwd"(%23) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      %25 = "rail.fwd"(%24) {kDataPathRegisters = [[6, 0, 0]], kInputDataPathRegisters = [[5, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      %26 = "rail.fwd"(%25) {kDataPathRegisters = [[7, 0, 0]], kInputDataPathRegisters = [[6, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (bf16) -> bf16
      "rail.send"(%26, %12) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (bf16, bf16) -> ()
      %27 = "rail.io.control_in"() {kCtx = 66156768 : i64, kCtxName = "phase3", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_control_in_kBegin"} : () -> i1
      %28 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%27, %28) {kInit = 0 : i32} : (i1, i1) -> ()
      %29 = "rail.io.control_out"() {kCtx = 66156768 : i64, kCtxName = "phase3", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_control_out_kDone"} : () -> i1
      %30 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%30, %29) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 1 : i64, kNetwork = 1 : i64, kSeqId = -1 : i64, kSubCounter = 1 : i64}, kCtxID = 3 : i8, kDestCtxId = [0], kIsElaboratedForPCU = true, kName = "phase3", kNameBeforeSplit = "phase3", kNode = 66156768 : i64, kRegAllocSuccess = true, sym_name = "phase3"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kName = "tcompute0", kNode = 69393296 : i64, sym_name = "tcompute0"} : () -> ()
  "rail.terminator"() : () -> ()
}) {kDataFormat = "BF16", kDisableContextSplit = false, kName = "tcompute0", kNode = 66137936 : i64, sym_name = "tcompute0"} : () -> ()

========= Summary IR ========
tbuffer partition_0_0__LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_logreg__criterion__crossentropyloss_tbuf_tmp
    loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":2112:0)
    layout: <BF16[14, 1]CM/64@0x0> vec_order: {1, 0} vec_dim: 0 depth: 1 dims: {32, 1}
    pmu: D_0_0 depth: 1 capacity: 1024 (words) is_transpose: 0
        uctx: D_0_0.phase_w0
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":964:0)
            disable_full_stall port: WRITE ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(phase_w0_iter0,) (1 # steps)
            addresses:
                addr : 768
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 1 pushif: cin[kBeginFromTCompute] popif: L0(phase_w0_iter0,)
                tb init: 1 pushif: cin[kBegin0] popif: L0(phase_w0_iter0,)
                tb init: 1 pushif: cin[kBegin1] popif: L0(phase_w0_iter0,)
                cout[kDone] - src: L0(phase_w0_iter0,)
                cout[1000] - src: L0(phase_w0_iter0,)
        uctx: D_0_0.phase1_R_max
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1028:0)
            pacing_window: 1 disable_empty_stall port: READ0 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 12 by 1)
                ctx done: L0(phase1_R_max_iter0,) (12 # steps)
            addresses:
                addr : 768
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 1 pushif: cin[kBeginFromTCompute] popif: L0(phase1_R_max_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase1_R_max_iter0,)
                cout[kDone] - src: L0(phase1_R_max_iter0,)
                cout[1000] - src: L0(phase1_R_max_iter0,)
        uctx: D_0_0.phase_rd_dummy
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1066:0)
            pacing_window: default disable_empty_stall port: READ1 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (10 # steps): 
                  iter[0] : (0 until 10 by 1)
                ctx done: L0(phase_rd_dummy_iter0,) (10 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase_rd_dummy_iter0,)
                cout[kDone] - src: L0(phase_rd_dummy_iter0,)
                cout[1000] - src: L0(phase_rd_dummy_iter0,)
        uctx: D_0_0.phase_w1
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1004:0)
            disable_full_stall port: WRITE ctxid: 1 concurrency grp: 1 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 768 by 64)
                ctx done: L0(phase_w1_iter0,) (12 # steps)
            addresses:
                addr : (0 until 768 by 64).c0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase_w1_iter0,)
                cout[kDone] - src: L0(phase_w1_iter0,)
                cout[1000] - src: L0(phase_w1_iter0,)
        uctx: D_0_0.phase2_R_exp
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1094:0)
            pacing_window: 1 disable_empty_stall port: READ0 ctxid: 1 concurrency grp: 1 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (10 # steps): 
                  iter[0] : (0 until 640 by 64)
                ctx done: L0(phase2_R_exp_iter0,) (10 # steps)
            addresses:
                addr : (0 until 640 by 64).c0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute] popif: L0(phase2_R_exp_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase2_R_exp_iter0,)
                tb init: 0 pushif: cin[kBegin1] popif: L0(phase2_R_exp_iter0,)
                tb init: 0 pushif: cin[kBegin2] popif: L0(phase2_R_exp_iter0,)
                cout[kDone] - src: L0(phase2_R_exp_iter0,)
                cout[1000] - src: L0(phase2_R_exp_iter0,)
        uctx: D_0_0.phase_w2
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":964:0)
            disable_full_stall port: WRITE ctxid: 2 concurrency grp: 2 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(phase_w2_iter0,) (1 # steps)
            addresses:
                addr : 832
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase_w2_iter0,)
                tb init: 0 pushif: cin[kBegin1] popif: L0(phase_w2_iter0,)
                tb init: 0 pushif: cin[kBegin2] popif: L0(phase_w2_iter0,)
                cout[kDone] - src: L0(phase_w2_iter0,)
                cout[1000] - src: L0(phase_w2_iter0,)
        uctx: D_0_0.phase3_R_max
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1122:0)
            pacing_window: 1 disable_empty_stall port: READ1 ctxid: 2 concurrency grp: 2 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 1)
                ctx done: L0(phase3_R_max_iter0,) (1 # steps)
            addresses:
                addr : 768
                ofst : 0
                pred : 0
                vec = 0
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute] popif: L0(phase3_R_max_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase3_R_max_iter0,)
                tb init: 0 pushif: cin[kBegin1] popif: L0(phase3_R_max_iter0,)
                cout[kDone] - src: L0(phase3_R_max_iter0,)
                cout[1000] - src: L0(phase3_R_max_iter0,)
        uctx: D_0_0.phase3_R_logsum
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1122:0)
            pacing_window: 1 disable_empty_stall port: READ0 ctxid: 2 concurrency grp: 2 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 1)
                ctx done: L0(phase3_R_logsum_iter0,) (1 # steps)
            addresses:
                addr : 832
                ofst : 0
                pred : 0
                vec = 0
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute] popif: L0(phase3_R_logsum_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase3_R_logsum_iter0,)
                tb init: 0 pushif: cin[kBegin1] popif: L0(phase3_R_logsum_iter0,)
                cout[kDone] - src: L0(phase3_R_logsum_iter0,)
                cout[1000] - src: L0(phase3_R_logsum_iter0,)
========= Summary IR ========
tbuffer partition_0_0__tbuf1a_0_0_83
    loc("LogregTorchSamba.cpp":203:0)
    layout: <BF16[1]RM/64@0x0> vec_order: {0} vec_dim: 0 depth: 1 dims: {32}
    pmu: D_0_0 depth: 1 capacity: 32 (words) is_transpose: 0
        uctx: D_0_0.LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kOutput
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropy.cpp":1768:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 1)
                ctx done: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kOutput_iter0,) (1 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 2
                vec = 0
            triggers:
                sin[8] - popif: ctx_en
                cout[done] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kOutput_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kOutput_iter0,)
                cout[wdone__] - src: L0(LogregTorchSamba_partition_0_0__logreg__criterion__crossentropyloss_kOutput_iter0,)
        uctx: D_0_0.kBackReadCtx
            loc("software/prism/src/plasma/templates/mlnodes/BackingPmu.cpp":150:0)
            pacing_window: 1 port: READ0 ctxid: 0 metapipe_iter (post divider): {} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(kBackReadCtx_iter0,) (1 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 4 pushif: cin[10] popif: L0(kBackReadCtx_iter0,)
                tb init: 0 pushif: cin[LogregTorchSamba.partition_0_0_.logreg__criterion__crossentropyloss@kOutput_wdone_in__] popif: L0(kBackReadCtx_iter0,)
                cout[1000] - src: L0(kBackReadCtx_iter0,)
========= Summary IR ========
tbuffer partition_1_0__tbuf1a_1_0_85
    loc("LogregTorchSamba.cpp":253:0)
    layout: <INT16[1]RM/64@0x0> vec_order: {0} vec_dim: 0 depth: 1 dims: {32}
    pmu: D_0_0 depth: 1 capacity: 32 (words) is_transpose: 0
        uctx: D_0_0.kFrontDynamicWriteCtx
            loc("software/compiler/rail/src/lib/node/tbuffer/TBufferContext.cpp":469:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(kFrontDynamicWriteCtx_iter0,) (1 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                cout[1000] - src: L0(kFrontDynamicWriteCtx_iter0,)
                cout[wdone__] - src: L0(kFrontDynamicWriteCtx_iter0,)
        uctx: D_0_0.LogregTorchSamba.partition_1_0_.logreg__criterion__crossentropyloss_bwd_loss@kInputY
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1469:0)
            pacing_window: 1 port: READ0 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 12 by 1)
                ctx done: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputY_iter0,) (12 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[phase2_strip_done] popif: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputY_iter0,)
                tb init: 0 pushif: cin[kFrontDynamicWriteCtx_wdone_in__] popif: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputY_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputY_iter0,)
========= Summary IR ========
tbuffer partition_1_0__tbuf1a_1_0_86
    loc("LogregTorchSamba.cpp":264:0)
    layout: <BF16[1]RM/64@0x0> vec_order: {0} vec_dim: 0 depth: 1 dims: {32}
    pmu: D_0_0 depth: 1 capacity: 32 (words) is_transpose: 0
        uctx: D_0_0.kFrontDynamicWriteCtx
            loc("software/compiler/rail/src/lib/node/tbuffer/TBufferContext.cpp":469:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(kFrontDynamicWriteCtx_iter0,) (1 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                cout[1000] - src: L0(kFrontDynamicWriteCtx_iter0,)
                cout[wdone__] - src: L0(kFrontDynamicWriteCtx_iter0,)
        uctx: D_0_0.LogregTorchSamba.partition_1_0_.logreg__criterion__crossentropyloss_bwd_loss@kInputLoss
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1502:0)
            pacing_window: 1 port: READ0 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 12 by 1)
                ctx done: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputLoss_iter0,) (12 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[phase2_strip_done] popif: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputLoss_iter0,)
                tb init: 0 pushif: cin[kFrontDynamicWriteCtx_wdone_in__] popif: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputLoss_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputLoss_iter0,)
========= Summary IR ========
tbuffer partition_1_0__tbuf1a_1_0_87
    loc("LogregTorchSamba.cpp":275:0)
    layout: <BF16[10, 1]RVCM/64@0x0> vec_order: {1, 0} vec_dim: 1 depth: 1 dims: {10, 32}
    pmu: D_0_0 depth: 1 capacity: 320 (words) is_transpose: 0
        uctx: D_0_0.kDefaultWrite
            loc("software/compiler/rail/src/lib/node/tbuffer/TBufferContext.cpp":469:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (10 # steps): 
                  iter[0] : (0 until 640 by 64)
                ctx done: L0(kDefaultWrite_iter0,) (10 # steps)
            addresses:
                addr : (0 until 640 by 64).c0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                cout[1000] - src: L0(kDefaultWrite_iter0,)
                cout[wdone__] - src: L0(kDefaultWrite_iter0,)
        uctx: D_0_0.LogregTorchSamba.partition_1_0_.logreg__criterion__crossentropyloss_bwd_loss@kInputX0
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1362:0)
            pacing_window: 12 port: READ0 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (24 # steps): 
                  iter[0] : (0 until 2 by 1)
                  iter[1] : (0 until 768 by 64)
                ctx done: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputX0_iter0,) (24 # steps)
            addresses:
                addr : (0 until 768 by 64).c1
                ofst : 0
                pred : cast<UInt32>(((0 until 768 by 64).c1 >= 640))
                vec = 1
            triggers:
                tb init: 1 pushif: (cin[phase0_strip_done] || cin[phase1_strip_done]) popif: L1(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputX0_iter1,)
                tb init: 1 pushif: cin[phase3_strip_done] popif: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputX0_iter0,)
                tb init: 0 pushif: cin[kDefaultWrite_wdone_in__] popif: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputX0_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputX0_iter0,)
                cout[kSecondReplayDone] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kInputX0_iter0,)
========= Summary IR ========
tcompute partition_1_0__LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_tcompute0
"rail.tcompute"() ( {
  %0 = "rail.const"() {kValue = -9.984000e+04 : bf16} : () -> bf16
  %1 = "rail.const"() {kValue = 10 : i64} : () -> ui16
  %2 = "rail.const"() {kValue = 32 : i64} : () -> ui16
  %3 = "rail.const"() {kValue = 0 : i64} : () -> ui16
  %4 = "rail.const"() {kValue = 1 : i64} : () -> ui16
  %5 = "rail.const"() {kValue = 12 : i64} : () -> ui16
  %6 = "rail.const"() {kValue = 1.000000e+00 : bf16} : () -> bf16
  %7 = "rail.const"() {kValue = 0.000000e+00 : bf16} : () -> bf16
  "rail.TLink"() {kDst = @tcompute0::@phase0::@tcompute0_tcompute_phase0_control_in_kBegin, kSrc = @tcompute0::@phase3::@tcompute0_tcompute_phase3_control_out_kDone} : () -> ()
  "rail.TLink"() {kDst = @tcompute0::@phase1::@tcompute0_tcompute_phase1_control_in_kBegin, kSrc = @tcompute0::@phase0::@tcompute0_tcompute_phase0_control_out_kDone} : () -> ()
  "rail.TLink"() {kDst = @tcompute0::@phase2::@tcompute0_tcompute_phase2_control_in_kBegin, kSrc = @tcompute0::@phase1::@tcompute0_tcompute_phase1_control_out_kDone} : () -> ()
  "rail.TLink"() {kDst = @tcompute0::@phase3::@tcompute0_tcompute_phase3_control_in_kBegin, kSrc = @tcompute0::@phase2::@tcompute0_tcompute_phase2_control_out_kDone} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase0_vector_in_0"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase0_vector_out_2000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase0_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase0_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 0 : i64}, kCtxID = 0 : i8, kDestCtxId = [1], kName = "phase0", kNode = 72441664 : i64, sym_name = "phase0_handle"} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase1_vector_in_9000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase1_vector_in_6000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase1_vector_out_10000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase1_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase1_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 0 : i64}, kCtxID = 1 : i8, kDestCtxId = [2], kName = "phase1", kNode = 72445776 : i64, sym_name = "phase1_handle"} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase2_vector_in_12000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase2_vector_out_7000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase2_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase2_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 0 : i64}, kCtxID = 2 : i8, kDestCtxId = [3], kName = "phase2", kNode = 72449888 : i64, sym_name = "phase2_handle"} : () -> ()
  "rail.handle"() ( {
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase3_vector_in_21000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase3_vector_in_16000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase3_vector_in_17000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_in", sym_name = "tcompute0_tcompute_phase3_vector_in_20000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kVectorLink", kPortType = "rail.io.vector_out", sym_name = "tcompute0_tcompute_phase3_vector_out_15000"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_in", sym_name = "tcompute0_tcompute_phase3_control_in_kBegin"} : () -> ()
    "rail.port_handle"() {kLinkType = "kControlLink", kPortType = "rail.io.control_out", sym_name = "tcompute0_tcompute_phase3_control_out_kDone"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kContextTableEntry = {kNetwork = 1 : i64}, kCtxID = 3 : i8, kDestCtxId = [0], kName = "phase3", kNode = 72458112 : i64, sym_name = "phase3_handle"} : () -> ()
  "rail.pcu"() ( {
    "rail.context"() ( {
      %8 = "rail.counter"(%3, %2, %4) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %10 = "rail.ctxdone"(%9) : (i1) -> i1
      %11 = "rail.counter"(%3, %4, %5) {Par = 1 : i32, kIterPos = 1 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %12 = "rail.io.vector_in"() {kCtx = 72441664 : i64, kCtxName = "phase0", kLanes = [], kPortName = "0", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase0_vector_in_0"} : () -> vector<32xbf16>
      %13 = "rail.io.vector_out"() {kCtx = 72441664 : i64, kCtxName = "phase0", kLanes = [], kPortName = "2000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase0_vector_out_2000"} : () -> vector<32xbf16>
      %14:2 = "rail.accumulator"() {kForIterPos = [0], kInitValue = 0xFFF0000000000000 : f64, kNumStages = 1 : i64} : () -> (vector<32xbf16>, vector<1x32xbf16>)
      "rail.iterchain"(%8, %11) {kForIterPos = [0], kName = "chain"} : (ui16, ui16) -> ()
      %15 = "rail.move"(%12) {kDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %16 = "rail.move"(%11) {kInstructionStageType = 1 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 0 : i64} : (ui16) -> vector<32xui16>
      %17 = "rail.move"(%11) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (ui16) -> vector<32xui16>
      %18 = "rail.less_than"(%17, %1) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsBinaryOp = true, kIsBooleanOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 1 : i64} : (vector<32xui16>, ui16) -> vector<32xi1>
      %19 = "rail.fwd"(%15) {kDataPathRegisters = [[1, 4, 0]], kInputDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %20 = "rail.ifelse"(%18, %19, %0) {kDataPathRegisters = [[2, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 2 : i64} : (vector<32xi1>, vector<32xbf16>, bf16) -> vector<32xbf16>
      %21 = "rail.fwd"(%20) {kDataPathRegisters = [[3, 0, 0]], kInputDataPathRegisters = [[2, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %22 = "rail.fwd"(%21) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %23 = "rail.fwd"(%22) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %24 = "rail.maxacc"(%23) {kDataPathRegisters = [[6, 0, 0]], kInstructionStageType = 2 : i64, kIsAccOp = true, kIsDataPathOp = true, kIsUnaryOp = true, kRegAllocInstLatency = 6 : i64} : (vector<32xbf16>) -> vector<32xbf16>
      %25 = "rail.fwd"(%24) {kDataPathRegisters = [[7, 0, 0]], kInputDataPathRegisters = [[6, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%25, %13) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %26 = "rail.ctrdone"(%11) {kForIterPos = [0]} : (ui16) -> i1
      "rail.drain"(%26) {kForIterPos = [0], kIsControlOp = true} : (i1) -> ()
      %27 = "rail.io.control_in"() {kCtx = 72441664 : i64, kCtxName = "phase0", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase0_control_in_kBegin"} : () -> i1
      %28 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%27, %28) {kInit = 1 : i32} : (i1, i1) -> ()
      %29 = "rail.io.control_out"() {kCtx = 72441664 : i64, kCtxName = "phase0", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase0_control_out_kDone"} : () -> i1
      %30 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%30, %29) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 0 : i64, kNetwork = 0 : i64, kSeqId = -1 : i64, kSubCounter = 0 : i64}, kCtxID = 0 : i8, kDestCtxId = [1], kIsElaboratedForPCU = true, kName = "phase0", kNode = 72441664 : i64, kRegAllocSuccess = true, sym_name = "phase0"} : () -> ()
    "rail.context"() ( {
      %8 = "rail.counter"(%3, %4, %5) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.io.vector_in"() {kCtx = 72445776 : i64, kCtxName = "phase1", kLanes = [], kPortName = "9000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase1_vector_in_9000"} : () -> vector<32xbf16>
      %10 = "rail.io.vector_in"() {kCtx = 72445776 : i64, kCtxName = "phase1", kLanes = [], kPortName = "6000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase1_vector_in_6000"} : () -> vector<32xbf16>
      %11 = "rail.io.vector_out"() {kCtx = 72445776 : i64, kCtxName = "phase1", kLanes = [], kPortName = "10000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase1_vector_out_10000"} : () -> vector<32xbf16>
      "rail.iterchain"(%8) {kName = "chain"} : (ui16) -> ()
      %12 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %13 = "rail.ctxdone"(%12) : (i1) -> i1
      %14 = "rail.move"(%10) {kDataPathRegisters = [[0, 5, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %15 = "rail.move"(%9) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %16 = "rail.sub"(%15, %14) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [0], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 3 : i64} : (vector<32xbf16>, vector<32xbf16>) -> vector<32xbf16>
      %17 = "rail.fwd"(%16) {kDataPathRegisters = [[2, 0, 0]], kInputDataPathRegisters = [[1, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %18 = "rail.fwd"(%17) {kDataPathRegisters = [[3, 0, 0]], kInputDataPathRegisters = [[2, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %19 = "rail.fwd"(%18) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %20 = "rail.fwd"(%19) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %21 = "rail.fwd"(%20) {kDataPathRegisters = [[6, 0, 0]], kInputDataPathRegisters = [[5, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %22 = "rail.exp"(%21) {kDataPathRegisters = [[7, 0, 0]], kForIterPos = [0], kInstructionStageType = 3 : i64, kIsDataPathOp = true, kIsTailComplexOp = true, kIsUnaryOp = true, kRegAllocInstLatency = 10 : i64} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%22, %11) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %23 = "rail.io.control_in"() {kCtx = 72445776 : i64, kCtxName = "phase1", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase1_control_in_kBegin"} : () -> i1
      %24 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%23, %24) {kInit = 0 : i32} : (i1, i1) -> ()
      %25 = "rail.io.control_out"() {kCtx = 72445776 : i64, kCtxName = "phase1", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase1_control_out_kDone"} : () -> i1
      %26 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%26, %25) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 1 : i64, kNetwork = 0 : i64, kSeqId = -1 : i64, kSubCounter = 0 : i64}, kCtxID = 1 : i8, kDestCtxId = [2], kIsElaboratedForPCU = true, kName = "phase1", kNode = 72445776 : i64, kRegAllocSuccess = true, sym_name = "phase1"} : () -> ()
    "rail.context"() ( {
      %8 = "rail.counter"(%3, %2, %4) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %10 = "rail.ctxdone"(%9) : (i1) -> i1
      %11 = "rail.counter"(%3, %4, %5) {Par = 1 : i32, kIterPos = 1 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %12 = "rail.io.vector_in"() {kCtx = 72449888 : i64, kCtxName = "phase2", kLanes = [], kPortName = "12000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase2_vector_in_12000"} : () -> vector<32xbf16>
      %13 = "rail.io.vector_out"() {kCtx = 72449888 : i64, kCtxName = "phase2", kLanes = [], kPortName = "7000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase2_vector_out_7000"} : () -> vector<32xbf16>
      %14:2 = "rail.accumulator"() {kForIterPos = [0], kInitValue = 0.000000e+00 : f32, kNumStages = 1 : i64} : () -> (vector<32xbf16>, vector<1x32xbf16>)
      "rail.iterchain"(%8, %11) {kForIterPos = [0], kName = "chain"} : (ui16, ui16) -> ()
      %15 = "rail.move"(%12) {kDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %16 = "rail.move"(%11) {kInstructionStageType = 1 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 0 : i64} : (ui16) -> vector<32xui16>
      %17 = "rail.move"(%11) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (ui16) -> vector<32xui16>
      %18 = "rail.less_than"(%17, %1) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsBinaryOp = true, kIsBooleanOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 1 : i64} : (vector<32xui16>, ui16) -> vector<32xi1>
      %19 = "rail.fwd"(%15) {kDataPathRegisters = [[1, 4, 0]], kInputDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %20 = "rail.ifelse"(%18, %19, %7) {kDataPathRegisters = [[2, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 2 : i64} : (vector<32xi1>, vector<32xbf16>, bf16) -> vector<32xbf16>
      %21 = "rail.macc"(%20, %6) {kDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsAccOp = true, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 5 : i64} : (vector<32xbf16>, bf16) -> vector<32xbf16>
      %22 = "rail.fwd"(%21) {kDataPathRegisters = [[4, 0, 0]], kInputDataPathRegisters = [[3, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %23 = "rail.fwd"(%22) {kDataPathRegisters = [[5, 0, 0]], kInputDataPathRegisters = [[4, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %24 = "rail.fwd"(%23) {kDataPathRegisters = [[6, 0, 0]], kInputDataPathRegisters = [[5, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %25 = "rail.recip"(%24) {kDataPathRegisters = [[7, 0, 0]], kForIterPos = [0], kInstructionStageType = 3 : i64, kIsDataPathOp = true, kIsTailComplexOp = true, kIsUnaryOp = true, kRegAllocInstLatency = 10 : i64} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%25, %13) {kForIterPos = [0], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %26 = "rail.ctrdone"(%11) {kForIterPos = [0]} : (ui16) -> i1
      "rail.drain"(%26) {kForIterPos = [0], kIsControlOp = true} : (i1) -> ()
      %27 = "rail.io.control_in"() {kCtx = 72449888 : i64, kCtxName = "phase2", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase2_control_in_kBegin"} : () -> i1
      %28 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%27, %28) {kInit = 0 : i32} : (i1, i1) -> ()
      %29 = "rail.io.control_out"() {kCtx = 72449888 : i64, kCtxName = "phase2", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase2_control_out_kDone"} : () -> i1
      %30 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%30, %29) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 0 : i64, kNetwork = 0 : i64, kSeqId = -1 : i64, kSubCounter = 1 : i64}, kCtxID = 2 : i8, kDestCtxId = [3], kIsElaboratedForPCU = true, kName = "phase2", kNode = 72449888 : i64, kRegAllocSuccess = true, sym_name = "phase2"} : () -> ()
    "rail.context"() ( {
      %8 = "rail.counter"(%3, %2, %4) {Par = 1 : i32, kIterPos = 0 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %9 = "rail.localevent"(%8) {kLReg = 0 : i64, kType = "kContextDone"} : (ui16) -> i1
      %10 = "rail.ctxdone"(%9) : (i1) -> i1
      %11 = "rail.counter"(%3, %4, %5) {Par = 1 : i32, kIterPos = 1 : i32, vectorized = false} : (ui16, ui16, ui16) -> ui16
      %12 = "rail.io.vector_in"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "21000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase3_vector_in_21000"} : () -> vector<32xi16>
      %13 = "rail.io.vector_in"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "16000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase3_vector_in_16000"} : () -> vector<32xbf16>
      %14 = "rail.io.vector_in"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "17000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase3_vector_in_17000"} : () -> vector<32xbf16>
      %15 = "rail.io.vector_in"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "20000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase3_vector_in_20000"} : () -> vector<32xbf16>
      %16 = "rail.io.vector_out"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "15000", kUnitName = "tcompute0", kVectorLengthInBytes = 64 : i64, sym_name = "tcompute0_tcompute_phase3_vector_out_15000"} : () -> vector<32xbf16>
      "rail.iterchain"(%8, %11) {kForIterPos = [0], kName = "chain"} : (ui16, ui16) -> ()
      %17 = "rail.move"(%12) {kDataPathRegisters = [[0, 0, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xi16>) -> vector<32xi16>
      %18 = "rail.move"(%11) {kInstructionStageType = 1 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 0 : i64} : (ui16) -> vector<32xui16>
      %19 = "rail.move"(%11) {kDataPathRegisters = [[0, 5, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (ui16) -> vector<32xui16>
      %20 = "rail.equal"(%17, %19) {kDataPathRegisters = [[1, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsBinaryOp = true, kIsBooleanOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 1 : i64} : (vector<32xi16>, vector<32xui16>) -> vector<32xi1>
      %21 = "rail.ifelse"(%20, %6, %7) {kDataPathRegisters = [[2, 2, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsDataPathOp = true, kRegAllocInstLatency = 2 : i64} : (vector<32xi1>, bf16, bf16) -> vector<32xbf16>
      %22 = "rail.move"(%13) {kDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %23 = "rail.move"(%14) {kDataPathRegisters = [[0, 3, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %24 = "rail.fwd"(%22) {kDataPathRegisters = [[1, 4, 0]], kInputDataPathRegisters = [[0, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %25 = "rail.fwd"(%24) {kDataPathRegisters = [[2, 4, 0]], kInputDataPathRegisters = [[1, 4, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %26 = "rail.fwd"(%23) {kDataPathRegisters = [[1, 3, 0]], kInputDataPathRegisters = [[0, 3, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %27 = "rail.fwd"(%26) {kDataPathRegisters = [[2, 3, 0]], kInputDataPathRegisters = [[1, 3, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %28 = "rail.mul"(%25, %27) {kDataPathRegisters = [[3, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 5 : i64} : (vector<32xbf16>, vector<32xbf16>) -> vector<32xbf16>
      %29 = "rail.fwd"(%21) {kDataPathRegisters = [[3, 4, 0]], kInputDataPathRegisters = [[2, 2, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %30 = "rail.sub"(%28, %29) {kDataPathRegisters = [[4, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 8 : i64} : (vector<32xbf16>, vector<32xbf16>) -> vector<32xbf16>
      %31 = "rail.move"(%15) {kDataPathRegisters = [[0, 1, 0]], kInstructionStageType = 1 : i64, kIsDataPathOp = true, kPrAllocated = true} : (vector<32xbf16>) -> vector<32xbf16>
      %32 = "rail.fwd"(%31) {kDataPathRegisters = [[0, 2, 0]], kInputDataPathRegisters = [[0, 1, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %33 = "rail.fwd"(%32) {kDataPathRegisters = [[1, 1, 0]], kInputDataPathRegisters = [[0, 2, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %34 = "rail.fwd"(%33) {kDataPathRegisters = [[1, 2, 0]], kInputDataPathRegisters = [[1, 1, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %35 = "rail.fwd"(%34) {kDataPathRegisters = [[2, 1, 0]], kInputDataPathRegisters = [[1, 2, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %36 = "rail.fwd"(%35) {kDataPathRegisters = [[3, 1, 0]], kInputDataPathRegisters = [[2, 1, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %37 = "rail.fwd"(%36) {kDataPathRegisters = [[4, 3, 0]], kInputDataPathRegisters = [[3, 1, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %38 = "rail.mul"(%30, %37) {kDataPathRegisters = [[5, 0, 0]], kForIterPos = [1], kInstructionStageType = 2 : i64, kIsArithmetic = true, kIsBinaryOp = true, kIsDataPathOp = true, kRegAllocInstLatency = 11 : i64} : (vector<32xbf16>, vector<32xbf16>) -> vector<32xbf16>
      %39 = "rail.fwd"(%38) {kDataPathRegisters = [[6, 0, 0]], kInputDataPathRegisters = [[5, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      %40 = "rail.fwd"(%39) {kDataPathRegisters = [[7, 0, 0]], kInputDataPathRegisters = [[6, 0, 0]], kInstructionStageType = 2 : i64, kIsDataPathOp = true} : (vector<32xbf16>) -> vector<32xbf16>
      "rail.send"(%40, %16) {kForIterPos = [1], kInstructionStageType = 0 : i64, kIsDataPathOp = true, kOpRWPattern1 = "kWriteOperand"} : (vector<32xbf16>, vector<32xbf16>) -> ()
      %41 = "rail.io.control_in"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "kBegin", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_control_in_kBegin"} : () -> i1
      %42 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kPcuControlPushPopCH"} : (ui16) -> i1
      "rail.inbuf"(%41, %42) {kInit = 0 : i32} : (i1, i1) -> ()
      %43 = "rail.io.control_out"() {kCtx = 72458112 : i64, kCtxName = "phase3", kLanes = [], kPortName = "kDone", kUnitName = "tcompute0", sym_name = "tcompute0_tcompute_phase3_control_out_kDone"} : () -> i1
      %44 = "rail.localevent"(%8) {kLReg = 1 : i64, kType = "kDone"} : (ui16) -> i1
      "rail.send"(%44, %43) {kOpRWPattern1 = "kWriteOperand"} : (i1, i1) -> ()
      "rail.terminator"() : () -> ()
    }) {kContextTableEntry = {kCounter = 1 : i64, kNetwork = 1 : i64, kSeqId = -1 : i64, kSubCounter = 1 : i64}, kCtxID = 3 : i8, kDestCtxId = [0], kIsElaboratedForPCU = true, kName = "phase3", kNode = 72458112 : i64, kRegAllocSuccess = true, sym_name = "phase3"} : () -> ()
    "rail.terminator"() : () -> ()
  }) {kName = "tcompute0", kNode = 74240272 : i64, sym_name = "tcompute0"} : () -> ()
  "rail.terminator"() : () -> ()
}) {kDataFormat = "BF16", kDisableContextSplit = true, kName = "tcompute0", kNode = 72437552 : i64, sym_name = "tcompute0"} : () -> ()

========= Summary IR ========
tbuffer partition_1_0__LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_tbuf_tmp0
    loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1761:0)
    layout: <BF16[14, 1]RM/64@0x0> vec_order: {0, 1} vec_dim: 1 depth: 1 dims: {14, 32}
    pmu: D_0_0 depth: 1 capacity: 448 (words) is_transpose: 0
        uctx: D_0_0.phaseW0
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":871:0)
            disable_full_stall port: WRITE ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(phaseW0_iter0,) (1 # steps)
            addresses:
                addr : 832
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 1 pushif: cin[kBeginFromTCompute0] popif: L0(phaseW0_iter0,)
                tb init: 1 pushif: cin[kBegin0] popif: L0(phaseW0_iter0,)
                cout[kDone] - src: L0(phaseW0_iter0,)
                cout[1000] - src: L0(phaseW0_iter0,)
        uctx: D_0_0.phaseRMax
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1039:0)
            pacing_window: 12 disable_empty_stall port: READ0 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 12 by 1)
                ctx done: L0(phaseRMax_iter0,) (12 # steps)
            addresses:
                addr : 832
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute0] popif: L0(phaseRMax_iter0,)
                tb init: 1 pushif: cin[kBeginFromTCompute1] popif: L0(phaseRMax_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phaseRMax_iter0,)
                cout[1000] - src: L0(phaseRMax_iter0,)
        uctx: D_0_0.phase_rd_dummy
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1010:0)
            pacing_window: default disable_empty_stall port: READ1 ctxid: 0 concurrency grp: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 12 by 1)
                ctx done: L0(phase_rd_dummy_iter0,) (12 # steps)
            addresses:
                addr : 0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBegin0] popif: L0(phase_rd_dummy_iter0,)
                cout[kDone] - src: L0(phase_rd_dummy_iter0,)
                cout[1000] - src: L0(phase_rd_dummy_iter0,)
        uctx: D_0_0.phaseW1
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":902:0)
            disable_full_stall port: WRITE ctxid: 1 concurrency grp: 1 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 768 by 64)
                ctx done: L0(phaseW1_iter0,) (12 # steps)
            addresses:
                addr : (0 until 768 by 64).c0
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 1 pushif: cin[kBeginFromTCompute0] popif: L0(phaseW1_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phaseW1_iter0,)
                cout[kDone] - src: L0(phaseW1_iter0,)
                cout[1000] - src: L0(phaseW1_iter0,)
        uctx: D_0_0.phaseRExp0
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":969:0)
            pacing_window: 12 disable_empty_stall port: READ0 ctxid: 1 concurrency grp: 1 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 768 by 64)
                ctx done: L0(phaseRExp0_iter0,) (12 # steps)
            addresses:
                addr : (0 until 768 by 64).c0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute0] popif: L0(phaseRExp0_iter0,)
                tb init: 1 pushif: cin[kBeginFromTCompute1] popif: L0(phaseRExp0_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phaseRExp0_iter0,)
                cout[kDone] - src: L0(phaseRExp0_iter0,)
                cout[1000] - src: L0(phaseRExp0_iter0,)
        uctx: D_0_0.phaseW2
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":871:0)
            disable_full_stall port: WRITE ctxid: 2 concurrency grp: 2 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (1 # steps): 
                  iter[0] : (0 until 1 by 32)
                ctx done: L0(phaseW2_iter0,) (1 # steps)
            addresses:
                addr : 768
                ofst : 0
                pred : 2
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                tb init: 0 pushif: cin[kBeginFromTCompute0] popif: L0(phaseW2_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phaseW2_iter0,)
                cout[kDone] - src: L0(phaseW2_iter0,)
                cout[1000] - src: L0(phaseW2_iter0,)
        uctx: D_0_0.phaseRExp1
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":969:0)
            pacing_window: 12 disable_empty_stall port: READ0 ctxid: 2 concurrency grp: 2 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 768 by 64)
                ctx done: L0(phaseRExp1_iter0,) (12 # steps)
            addresses:
                addr : (0 until 768 by 64).c0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute0] popif: L0(phaseRExp1_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phaseRExp1_iter0,)
                tb init: 0 pushif: cin[kBegin1] popif: L0(phaseRExp1_iter0,)
                cout[1000] - src: L0(phaseRExp1_iter0,)
        uctx: D_0_0.phaseRSumRecip
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1039:0)
            pacing_window: 12 disable_empty_stall port: READ1 ctxid: 2 concurrency grp: 2 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 12 by 1)
                ctx done: L0(phaseRSumRecip_iter0,) (12 # steps)
            addresses:
                addr : 768
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[kBeginFromTCompute0] popif: L0(phaseRSumRecip_iter0,)
                tb init: 0 pushif: cin[kBegin0] popif: L0(phaseRSumRecip_iter0,)
                tb init: 0 pushif: cin[kBegin1] popif: L0(phaseRSumRecip_iter0,)
                cout[1000] - src: L0(phaseRSumRecip_iter0,)
        uctx: D_0_0.dummy_phaseRExp0_to_phaseRSumRecip_launcher
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":969:0)
            pacing_window: default port: READ1 ctxid: 1 metapipe_iter (post divider): {1} 
            iter_chains:
            addresses:
            triggers:
========= Summary IR ========
tbuffer partition_1_0__tbuf1a_1_0_99
    loc("LogregTorchSamba.cpp":301:0)
    layout: <BF16[10, 1]RVCM/64@0x0> vec_order: {1, 0} vec_dim: 1 depth: 1 dims: {10, 32}
    pmu: D_0_0 depth: 1 capacity: 320 (words) is_transpose: 0
        uctx: D_0_0.LogregTorchSamba.partition_1_0_.logreg__criterion__crossentropyloss_bwd_loss@kOutput0
            loc("software/templates/src/templates/cross_entropy/rail/CrossEntropyGrad.cpp":1418:0)
            port: WRITE ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (12 # steps): 
                  iter[0] : (0 until 768 by 64)
                ctx done: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kOutput0_iter0,) (12 # steps)
            addresses:
                addr : (0 until 768 by 64).c0
                ofst : 0
                pred : (cast<UInt32>(((0 until 768 by 64).c0 < 640)) * 2)
                vec = 1
            triggers:
                vin[8] - popif: ctx_en
                cout[done] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kOutput0_iter0,)
                cout[1000] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kOutput0_iter0,)
                cout[wdone__] - src: L0(LogregTorchSamba_partition_1_0__logreg__criterion__crossentropyloss_bwd_loss_kOutput0_iter0,)
        uctx: D_0_0.kDefaultRead1
            loc("software/compiler/rail/src/lib/node/tbuffer/TBufferContext.cpp":469:0)
            pacing_window: 10 port: READ0 ctxid: 0 metapipe_iter (post divider): {1} 
            iter_chains:
                addr_chain  (10 # steps): 
                  iter[0] : (0 until 640 by 64)
                ctx done: L0(kDefaultRead1_iter0,) (10 # steps)
            addresses:
                addr : (0 until 640 by 64).c0
                ofst : 0
                pred : 0
                vec = 1
            triggers:
                tb init: 0 pushif: cin[LogregTorchSamba.partition_1_0_.logreg__criterion__crossentropyloss_bwd_loss@kOutput0_wdone_in__] popif: L0(kDefaultRead1_iter0,)
                cout[1000] - src: L0(kDefaultRead1_iter0,)
