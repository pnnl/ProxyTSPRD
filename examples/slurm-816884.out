Now you should run one of the following depending on your shell
source /share/apps/python/miniconda3.9/etc/profile.d/conda.sh
source /share/apps/python/miniconda3.9/etc/profile.d/conda.csh
/share/apps/cuda/11.0/lib:/share/apps/cuda/11.0/lib64:/share/apps/openmpi/4.1.1/gcc/10.3.0/lib:/share/apps/gcc/10.3.0/lib:/share/apps/gcc/10.3.0/lib64:/usr/lib64/:/share/apps/python/miniconda3.9/lib:/share/apps/cuda/11.0/lib64/stubs:/share/apps/cuda/11.0/extras/CUPTI/lib64/
gpu
2022-05-26 23:00:51.974195: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
[INFO] PyTorch version:  1.9.1+cu111
[INFO] Device Type: cuda
[INFO] Using 2/2 GPUs
[INFO] Output Data Directory: /qfs/projects/pacer/milan/data/ProxyTSPRD_IPDPS
[INFO] Selected App: LSTM
[INFO] Default Data Type: float64
[INFO] App Supports Mixed Precision: True
[INFO] App Supports MGPUs (using None): True
None
{'info': {'app_name': 'LSTM', 'mixed_precision_support': 'True', 'mgpu_support': 'True', 'data_type': 'float64', 'output_dir': '../../../data/ProxyTSPRD_IPDPS/'}, 'data_params': {'training_data_dir': '../../../data/NewTestScenarios/', 'input_file_format': 'mat', 'data_generator': 'GridNetworkSequentialDataGenerator', 'n_scenarios': 180, 'n_rows': 1400, 'n_cols': 136, 'repeat_cols': 1, 'look_back': 60, 'look_forward': 30, 'shift_size': 1, 'stride': 1, 'n_signals': 3}, 'model_info': {'model_name': 'LSTM', 'model_dir': '../../../models/ProxyTSPRD_IPDPS/', 'tb_log_dir': '../../../logs/', 'fill_data': 'False', 'hyperparameters': {'hl_1_dim': 128, 'hl_2_dim': 128, 'hl_3_dim': 64, 'hl_4_dim': 64, 'latent_dim': 64, 'reg_factor': 0, 'dropout_prob': 0.005, 'weight_regularizer': 0.001, 'bias_regularizer': 0, 'learning_rate': 0.0005, 'validation_split': 0.25}}}
[INFO] Training Data Directory: /qfs/projects/pacer/milan/data/NewTestScenarios
[INFO] Found 180 `mat` files
[INFO] Using 180/180 `mat` files
float64
